{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\iot_dashboard\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Projects\\\\iot_dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Projects\\\\iot_dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\iot_dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\iot_dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\iot_dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\iot_dashboard\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\iot_dashboard\\\\src\\\\views\\\\Dashboard.jsx\";\n\nimport React from \"react\";\nimport \"./Dashboard.css\";\nimport Map from \"../components/Map\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // react plugin used to create charts\n\nimport { Line } from \"react-chartjs-2\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Table, Row, Col } from \"reactstrap\"; // core components\n\nimport { chartExample1 } from \"../variables/charts.jsx\";\nvar MapWrapper = withScriptjs(withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 7,\n    defaultCenter: {\n      lat: props.lat,\n      lng: props.lon\n    } // defaultCenter={{ lat: 12.9716, lng: 77.5946 }}\n    ,\n    defaultOptions: {\n      scrollwheel: true,\n      //we disable de scroll over the map, it is a really annoing when you scroll through page\n      styles: [{\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#1d2c4d\"\n        }]\n      }, {\n        stylers: [{\n          color: \"#8ec3b9\"\n        }]\n      }, {\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#1a3646\"\n        }]\n      }, {\n        featureType: \"administrative.country\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#4b6878\"\n        }]\n      }, {\n        featureType: \"administrative.land_parcel\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#64779e\"\n        }]\n      }, {\n        featureType: \"administrative.province\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#4b6878\"\n        }]\n      }, {\n        featureType: \"landscape.man_made\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#334e87\"\n        }]\n      }, {\n        featureType: \"landscape.natural\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#023e58\"\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#283d6a\"\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#6f9ba5\"\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#1d2c4d\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          color: \"#023e58\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#3C7680\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#304a7d\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#98a5be\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#1d2c4d\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#2c6675\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          color: \"#9d2a80\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#9d2a80\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#b0d5ce\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#023e58\"\n        }]\n      }, {\n        featureType: \"transit\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#98a5be\"\n        }]\n      }, {\n        featureType: \"transit\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#1d2c4d\"\n        }]\n      }, {\n        featureType: \"transit.line\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          color: \"#283d6a\"\n        }]\n      }, {\n        featureType: \"transit.station\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#3a4762\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#0e1626\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#4e6d70\"\n        }]\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Marker, {\n    position: {\n      lat: _this.state.lat,\n      lng: _this.state.long\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }));\n}));\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this2;\n\n    _classCallCheck(this, Dashboard);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this2.setBgChartData = function (name) {\n      _this2.setState({\n        bigChartData: name\n      });\n    };\n\n    _this2.state = {\n      bigChartData: \"data1\",\n      testdata: null,\n      numberOfAlerts: null,\n      alerts: [],\n      signalStrength: null,\n      deviceStatus: null,\n      lat: 0,\n      long: 0\n    };\n    return _this2;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    // ,{'mode': 'no-cors'}\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.timer = setInterval(function () {\n        return _this3.getTemperature();\n      }, 1000);\n      this.timer = setInterval(function () {\n        return _this3.getAlerts();\n      }, 1000);\n      this.timer = setInterval(function () {\n        return _this3.getSignal();\n      }, 1000);\n      this.timer = setInterval(function () {\n        return _this3.getDeviceStatus();\n      }, 1000);\n      this.timer = setInterval(function () {\n        return _this3.getLocation();\n      }, 10000);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        lat: nextProps.lat,\n        long: nextProps.long\n      });\n    }\n  }, {\n    key: \"getTemperature\",\n    value: function () {\n      var _getTemperature = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/temperature\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  console.log(responseData).catch(function (error) {\n                    console.error(error);\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getTemperature() {\n        return _getTemperature.apply(this, arguments);\n      }\n\n      return getTemperature;\n    }()\n  }, {\n    key: \"getAlerts\",\n    value: function () {\n      var _getAlerts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/error\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var numberOfAlerts = responseData.length;\n\n                  _this4.setState({\n                    numberOfAlerts: numberOfAlerts,\n                    alerts: responseData\n                  });\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAlerts() {\n        return _getAlerts.apply(this, arguments);\n      }\n\n      return getAlerts;\n    }()\n  }, {\n    key: \"getSignal\",\n    value: function () {\n      var _getSignal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/sigstrength\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  _this5.setState({\n                    signalStrength: responseData[0][\"SIGNAL STRENGTH\"]\n                  });\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getSignal() {\n        return _getSignal.apply(this, arguments);\n      }\n\n      return getSignal;\n    }()\n  }, {\n    key: \"getDeviceStatus\",\n    value: function () {\n      var _getDeviceStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/checkdev\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  _this6.setState({\n                    deviceStatus: responseData\n                  });\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getDeviceStatus() {\n        return _getDeviceStatus.apply(this, arguments);\n      }\n\n      return getDeviceStatus;\n    }()\n  }, {\n    key: \"getLocation\",\n    value: function () {\n      var _getLocation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this7 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000//latlong\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  _this7.setState({\n                    lat: parseFloat(responseData[0][\"LONGITUDE\"]),\n                    long: parseFloat(responseData[0][\"LATTITUDE\"])\n                  });\n\n                  _this7.forceUpdate();\n\n                  console.log(parseFloat(responseData[0][\"LATTITUDE\"]));\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getLocation() {\n        return _getLocation.apply(this, arguments);\n      }\n\n      return getLocation;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-bell-55 text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }), \" PwC Demo Device\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-delivery-fast text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), \" \", \"Number of Alerts: \", this.state.numberOfAlerts)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, this.state.deviceStatus === \"CONNECTED\" ? React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }), \"Signal Strength : \", this.state.signalStrength) : React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }), \"Last Connected at :\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Telemetry\")), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(Button, {\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data1\"\n        }),\n        color: \"info\",\n        id: \"0\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        defaultChecked: true,\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"1\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data2\"\n        }),\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, \"Water Level\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-gift-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"2\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data3\"\n        }),\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, \"Flow\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-tap-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"3\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data4\"\n        }),\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data4\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, \"Heartbeat\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-tap-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: chartExample1[this.state.bigChartData],\n        options: chartExample1.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Alerts\")), React.createElement(CardBody, {\n        class: \"test2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary tablehead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        class: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"th\", {\n        class: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"Value\"), React.createElement(\"th\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"Error Code\"))), React.createElement(\"tbody\", {\n        className: \"tablebody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, this.state.alerts.map(function (item) {\n        return (//  console.log(item[\"DATE\"] + item[\"TIME\"])\n          React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 577\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            class: \"time\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 578\n            },\n            __self: this\n          }, item[\"DATE\"] + \" \" + item[\"TIME\"]), React.createElement(\"td\", {\n            class: \"value\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 579\n            },\n            __self: this\n          }, \"Temperature Sensor Not Working\"), React.createElement(\"td\", {\n            className: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 580\n            },\n            __self: this\n          }, item[\"ERROR CODE\"]))\n        );\n      })))))), React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, \"Maps\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(MapWrapper, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649\n          },\n          __self: this\n        }) //lat={this.state.lat}\n        //lon={this.state.long}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      })), React.createElement(Map, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, \" \")))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\Projects\\iot_dashboard\\src\\views\\Dashboard.jsx"],"names":["React","Map","classNames","Line","withScriptjs","withGoogleMap","GoogleMap","Marker","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","chartExample1","MapWrapper","props","lat","lng","lon","scrollwheel","styles","elementType","stylers","color","featureType","state","long","Dashboard","setBgChartData","name","setState","bigChartData","testdata","numberOfAlerts","alerts","signalStrength","deviceStatus","timer","setInterval","getTemperature","getAlerts","getSignal","getDeviceStatus","getLocation","nextProps","fetch","method","then","response","json","responseData","console","log","catch","error","length","parseFloat","forceUpdate","active","options","map","item","height","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Dashboard.css\";\nimport Map from \"../components/Map\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line } from \"react-chartjs-2\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport { chartExample1 } from \"../variables/charts.jsx\";\n\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={7}\n      defaultCenter={{ lat: props.lat, lng: props.lon }}\n      // defaultCenter={{ lat: 12.9716, lng: 77.5946 }}\n      defaultOptions={{\n        scrollwheel: true, //we disable de scroll over the map, it is a really annoing when you scroll through page\n        styles: [\n          {\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            stylers: [\n              {\n                color: \"#8ec3b9\"\n              }\n            ]\n          },\n          {\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1a3646\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.country\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#4b6878\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.land_parcel\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#64779e\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.province\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#4b6878\"\n              }\n            ]\n          },\n          {\n            featureType: \"landscape.man_made\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#334e87\"\n              }\n            ]\n          },\n          {\n            featureType: \"landscape.natural\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#283d6a\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#6f9ba5\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#3C7680\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#304a7d\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#98a5be\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#2c6675\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#9d2a80\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#9d2a80\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#b0d5ce\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#98a5be\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit.line\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#283d6a\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit.station\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#3a4762\"\n              }\n            ]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#0e1626\"\n              }\n            ]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#4e6d70\"\n              }\n            ]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: this.state.lat, lng: this.state.long }} />\n    </GoogleMap>\n  ))\n);\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\",\n      testdata: null,\n      numberOfAlerts: null,\n      alerts: [],\n      signalStrength: null,\n      deviceStatus: null,\n      lat: 0,\n      long: 0\n    };\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n  // ,{'mode': 'no-cors'}\n  componentDidMount() {\n    this.timer = setInterval(() => this.getTemperature(), 1000);\n\n    this.timer = setInterval(() => this.getAlerts(), 1000);\n    this.timer = setInterval(() => this.getSignal(), 1000);\n    this.timer = setInterval(() => this.getDeviceStatus(), 1000);\n    this.timer = setInterval(() => this.getLocation(), 10000);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      lat: nextProps.lat,\n      long: nextProps.long\n    });\n  }\n\n  async getTemperature() {\n    fetch(\"http://127.0.0.1:5000/temperature\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        console.log(responseData)\n      .catch(error => {\n        console.error(error);\n      });\n    })\n  }\n\n  async getAlerts() {\n    fetch(\"http://127.0.0.1:5000/error\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        let numberOfAlerts = responseData.length;\n        this.setState({\n          numberOfAlerts: numberOfAlerts,\n          alerts: responseData\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getSignal() {\n    fetch(\"http://127.0.0.1:5000/sigstrength\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        this.setState({\n          signalStrength: responseData[0][\"SIGNAL STRENGTH\"]\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getDeviceStatus() {\n    fetch(\"http://127.0.0.1:5000/checkdev\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        this.setState({\n          deviceStatus: responseData\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n  async getLocation() {\n    fetch(\"http://127.0.0.1:5000//latlong\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        this.setState({\n          lat: parseFloat(responseData[0][\"LONGITUDE\"]),\n          long: parseFloat(responseData[0][\"LATTITUDE\"])\n        });\n        this.forceUpdate();\n        console.log(parseFloat(responseData[0][\"LATTITUDE\"]));\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col lg=\"4\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h2\">\n                    <i className=\"tim-icons icon-bell-55 text-info\" /> PwC Demo\n                    Device\n                  </CardTitle>\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n            <Col lg=\"4\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h2\">\n                    <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                    {/*Number of Alerts: {this.state.numberOfAlerts}*/}\n                    Number of Alerts: {this.state.numberOfAlerts}\n                  </CardTitle>\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n            <Col lg=\"4\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  {this.state.deviceStatus === \"CONNECTED\" ? (\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-send text-success\" />\n                      Signal Strength : {this.state.signalStrength}\n                    </CardTitle>\n                  ) : (\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-send text-success\" />\n                      Last Connected at : \n                    </CardTitle>\n                  )}\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      {/* <h5 className=\"card-category\">Device Telemetry</h5> */}\n                      <CardTitle tag=\"h2\">Telemetry</CardTitle>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\"\n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() => this.setBgChartData(\"data1\")}\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Temperature\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data2\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Water Level\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data3\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Flow\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"3\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data4\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data4\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Heartbeat\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                      data={chartExample1[this.state.bigChartData]}\n                      options={chartExample1.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Alerts</CardTitle>\n                </CardHeader>\n                <CardBody class=\"test2\">\n                  <Table>\n                    <thead className=\"text-primary tablehead\">\n                      <tr>\n                        <th class=\"time\">Time</th>\n                        <th class=\"value\">Value</th>\n                        <th className=\"error\" >Error Code</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"tablebody\">\n                      {this.state.alerts.map(item =>\n                        //  console.log(item[\"DATE\"] + item[\"TIME\"])\n                        <tr>\n                          <td class=\"time\">{item[\"DATE\"] + \" \" + item[\"TIME\"]}</td>\n                          <td class=\"value\">Temperature Sensor Not Working</td>\n                          <td className=\"error\" >{item[\"ERROR CODE\"]}</td>\n                        </tr>\n                      )}\n                      {/* <tr>\n                        <td>06:28:92</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E021</td>\n                      </tr>\n                      <tr>\n                        <td>08:09:21</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E19</td>\n                      </tr>\n                      <tr>\n                        <td>10:12:12</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E03</td>\n                      </tr>\n                      <tr>\n                        <td>10:22:12</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E08</td>\n                      </tr>\n                      <tr>\n                        <td>10:32:12</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E01</td>\n                      </tr>\n                      <tr>\n                        <td>10:01:12</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E08</td>\n                      </tr>\n                      <tr>\n                        <td>10:11:12</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E01</td>\n                      </tr>\n                      <tr>\n                        <td>10:15:12</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E08</td>\n                      </tr>\n                      <tr>\n                        <td>10:16:12</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E01</td>\n                      </tr>\n                      <tr>\n                        <td>12:12:15</td>\n                        <td>Sensor Not Working</td>\n                        <td className=\"text-center\">E08</td>\n                      </tr> */}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Maps</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <div>\n                    <MapWrapper\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190\"\n                      loadingElement={<div style={{ height: `100%` }} />}\n                      containerElement={<div style={{ height: `100%` }} />}\n                      mapElement={<div style={{ height: `100%` }} />}\n                      //lat={this.state.lat}\n                      //lon={this.state.long}\n                    />\n                  </div>\n                  <Map> </Map>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}