{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\src\\\\views\\\\Dashboard.jsx\";\nimport React from \"react\";\nimport \"./Dashboard.css\"; //import Map from \"../components/Map\";\n// nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // react plugin used to create charts\n\nimport { Line } from \"react-chartjs-2\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react'; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Table, Row, Col } from \"reactstrap\"; // core components\n\nimport { chartExample1 } from \"../variables/charts.jsx\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.setBgChartData = function (name) {\n      _this.setState({\n        bigChartData: name\n      });\n    };\n\n    _this.state = {\n      bigChartData: \"data1\",\n      testdata: null,\n      numberOfAlerts: null,\n      alerts: [],\n      signalStrength: null,\n      deviceStatus: null,\n      connectionStatus: null,\n      lat: 0,\n      long: 0\n    };\n    _this.getLocation = _this.getLocation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTemperature = _this.getTemperature.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAlerts = _this.getAlerts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSignal = _this.getSignal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDeviceStatus = _this.getDeviceStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    // ,{'mode': 'no-cors'}\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.getTemperature();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getAlerts();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getSignal();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getDeviceStatus();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getLocation();\n      }, 10000);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        lat: nextProps.lat,\n        long: nextProps.long\n      });\n    }\n  }, {\n    key: \"getTemperature\",\n    value: function () {\n      var _getTemperature = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/temperature\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var a = [];\n                  var i = 0; // newdate = date.split(\"/\").reverse().join(\"-\");\n\n                  for (var index = 0; index < responseData.length - 1; index++) {\n                    var x = responseData[index][\"DATE\"];\n                    var newdate = x.split(\"/\").reverse().join(\"-\");\n                    var t1 = newdate + \" \" + responseData[index][\"TIME\"];\n                    var y = responseData[index + 1][\"DATE\"];\n                    var newdate1 = y.split(\"/\").reverse().join(\"-\");\n                    var t2 = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                    var td = new Date(t2) - new Date(t1);\n                    var td2 = new Date(\"April 1, 2019 21:13:00\") - new Date(t1);\n\n                    if (td > 380000 && td2 < 1209600000) {\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = 0;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = 0;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n                      i = i + 1;\n                    } else if (td2 < 1209600000) {\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n                      i = i + 1;\n                    }\n                  }\n\n                  _this3.setState({\n                    temperature: a\n                  }); //console.log(this.state.temperature);\n\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getTemperature() {\n        return _getTemperature.apply(this, arguments);\n      }\n\n      return getTemperature;\n    }()\n  }, {\n    key: \"getAlerts\",\n    value: function () {\n      var _getAlerts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/error\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var numberOfAlerts = responseData.length;\n\n                  _this4.setState({\n                    numberOfAlerts: numberOfAlerts,\n                    alerts: responseData\n                  });\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAlerts() {\n        return _getAlerts.apply(this, arguments);\n      }\n\n      return getAlerts;\n    }()\n  }, {\n    key: \"getSignal\",\n    value: function () {\n      var _getSignal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/sigstrength\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  _this5.setState({\n                    signalStrength: responseData[0][\"SIGNAL STRENGTH\"]\n                  });\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getSignal() {\n        return _getSignal.apply(this, arguments);\n      }\n\n      return getSignal;\n    }()\n  }, {\n    key: \"getDeviceStatus\",\n    value: function () {\n      var _getDeviceStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/checkdev\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var x = responseData[0][\"DATE\"];\n                  var newdate = x.split(\"/\").reverse().join(\"-\");\n                  var t1 = newdate + \" \" + responseData[0][\"TIME\"];\n                  var last_time = new Date(t1);\n                  var current_time = new Date();\n                  var time_difference = current_time - last_time;\n\n                  if (time_difference > 18000) {\n                    _this6.setState({\n                      deviceStatus: t1,\n                      connectionStatus: 'DISCONNECTED'\n                    });\n                  } else {\n                    _this6.setState({\n                      deviceStatus: t1,\n                      connectionStatus: 'CONNECTED'\n                    });\n                  } //console.log(time_difference)\n\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getDeviceStatus() {\n        return _getDeviceStatus.apply(this, arguments);\n      }\n\n      return getDeviceStatus;\n    }()\n  }, {\n    key: \"getLocation\",\n    value: function () {\n      var _getLocation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this7 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/latlong\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  _this7.setState({\n                    lat: parseFloat(responseData[0][\"LONGITUDE\"]),\n                    long: parseFloat(responseData[0][\"LATTITUDE\"])\n                  }); //console.log(this.state.long, this.state.lat)\n\n\n                  _this7.forceUpdate(); //console.log(parseFloat(responseData[0][\"LATTITUDE\"]));\n\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getLocation() {\n        return _getLocation.apply(this, arguments);\n      }\n\n      return getLocation;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-bell-55 text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), \" PwC Demo Device\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-delivery-fast text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), \" \", \"Number of Alerts: \", this.state.numberOfAlerts)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, this.state.deviceStatus === \"CONNECTED\" ? React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), \"Signal Strength : \", this.state.signalStrength) : React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), \"Device Status: \", this.state.connectionStatus)), \"\\xA0 Last Connected at : \", this.state.deviceStatus, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Telemetry\")), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Button, {\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data1\"\n        }),\n        color: \"info\",\n        id: \"0\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        defaultChecked: true,\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"1\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data2\"\n        }),\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Water Level\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-gift-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"2\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data3\"\n        }),\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Flow\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-tap-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"3\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data4\"\n        }),\n        onClick: function onClick() {\n          return _this8.setBgChartData(\"data4\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Heartbeat\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-tap-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: chartExample1[this.state.bigChartData],\n        options: chartExample1.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"Alerts\")), React.createElement(CardBody, {\n        class: \"test2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary tablehead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"th\", {\n        className: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"Value\"), React.createElement(\"th\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"Error Code\"))), React.createElement(\"tbody\", {\n        className: \"tablebody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, this.state.alerts.map(function (item) {\n        return (//  console.log(item[\"DATE\"] + item[\"TIME\"])\n          React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 401\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            class: \"time\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 402\n            },\n            __self: this\n          }, item[\"DATE\"] + \" \" + item[\"TIME\"]), React.createElement(\"td\", {\n            class: \"value\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403\n            },\n            __self: this\n          }, \"Temperature Sensor Not Working\"), React.createElement(\"td\", {\n            className: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 404\n            },\n            __self: this\n          }, item[\"ERROR CODE\"]))\n        );\n      })))))), React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"Maps\")), React.createElement(CardBody, {\n        className: \"mapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        className: \"map\",\n        style: {\n          position: \"relative\",\n          overflow: \"hidden\",\n          height: \"380px\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 13,\n        center: {\n          lat: this.state.lat,\n          lng: this.state.long\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: this.state.lat,\n          lng: this.state.long\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190\"\n})(Dashboard);","map":{"version":3,"sources":["C:\\Users\\hemanthg607\\Documents\\Projects\\IoTDashboard\\iotdashboard-master\\src\\views\\Dashboard.jsx"],"names":["React","classNames","Line","Map","InfoWindow","Marker","GoogleApiWrapper","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","chartExample1","Dashboard","props","setBgChartData","name","setState","bigChartData","state","testdata","numberOfAlerts","alerts","signalStrength","deviceStatus","connectionStatus","lat","long","getLocation","bind","getTemperature","getAlerts","getSignal","getDeviceStatus","interval","setInterval","nextProps","fetch","method","then","response","json","responseData","a","i","index","length","x","newdate","split","reverse","join","t1","y","newdate1","t2","td","Date","td2","temperature","catch","error","console","last_time","current_time","time_difference","parseFloat","forceUpdate","active","options","map","item","position","overflow","height","width","google","lng","Component","apiKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Dashboard.css\";\n//import Map from \"../components/Map\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line } from \"react-chartjs-2\";\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport { chartExample1 } from \"../variables/charts.jsx\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\",\n      testdata: null,\n      numberOfAlerts: null,\n      alerts: [],\n      signalStrength: null,\n      deviceStatus: null,\n      connectionStatus: null,\n      lat: 0,\n      long: 0\n    };\n\n    this.getLocation = this.getLocation.bind(this)\n    this.getTemperature = this.getTemperature.bind(this)\n    this.getAlerts = this.getAlerts.bind(this)\n    this.getSignal = this.getSignal.bind(this)\n    this.getDeviceStatus = this.getDeviceStatus.bind(this)\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n\n  \n  // ,{'mode': 'no-cors'}\n  componentDidMount() {\n    this.interval = setInterval(() => this.getTemperature(), 1000);\n    this.interval = setInterval(() => this.getAlerts(), 1000);\n    this.interval = setInterval(() => this.getSignal(), 1000);\n    this.interval = setInterval(() => this.getDeviceStatus(), 1000);\n    this.interval = setInterval(() => this.getLocation(), 10000);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      lat: nextProps.lat,\n      long: nextProps.long\n    });\n  }\n\n  async getTemperature() {\n    fetch(\"http://127.0.0.1:5000/temperature\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n\n        let a = [];\n        let i = 0;\n        // newdate = date.split(\"/\").reverse().join(\"-\");\n        for (let index = 0; index < responseData.length - 1; index++) {\n          let x = responseData[index][\"DATE\"];\n          let newdate = x\n            .split(\"/\")\n            .reverse()\n            .join(\"-\");\n          let t1 = newdate + \" \" + responseData[index][\"TIME\"];\n          let y = responseData[index + 1][\"DATE\"];\n          let newdate1 = y\n            .split(\"/\")\n            .reverse()\n            .join(\"-\");\n          let t2 = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n          let td = new Date(t2) - new Date(t1);\n          let td2 = new Date(\"April 1, 2019 21:13:00\") - new Date(t1)\n          if (td > 380000 && td2<1209600000) {\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = 0;\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = 0;\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n              i = i + 1;\n        \n          } else if(td2<1209600000)  {\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n              i = i + 1;\n        \n          }\n        }\n\n\n\n        this.setState({\n          temperature: a\n        });\n        //console.log(this.state.temperature);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getAlerts() {\n    fetch(\"http://127.0.0.1:5000/error\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        let numberOfAlerts = responseData.length;\n        this.setState({\n          numberOfAlerts: numberOfAlerts,\n          alerts: responseData\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getSignal() {\n    fetch(\"http://127.0.0.1:5000/sigstrength\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        this.setState({\n          signalStrength: responseData[0][\"SIGNAL STRENGTH\"]\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getDeviceStatus() {\n    fetch(\"http://127.0.0.1:5000/checkdev\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        let x = responseData[0][\"DATE\"];\n        let newdate = x\n          .split(\"/\")\n          .reverse()\n          .join(\"-\");\n        let t1 = newdate + \" \" + responseData[0][\"TIME\"];\n        let last_time = new Date(t1)\n        let current_time = new Date();\n        let time_difference =current_time - last_time\n        if (time_difference > 18000){\n          this.setState({\n            deviceStatus: t1,\n            connectionStatus: 'DISCONNECTED'\n          });\n        }\n        else{\n          this.setState({\n            deviceStatus: t1,\n            connectionStatus: 'CONNECTED'\n          })\n        }\n        //console.log(time_difference)\n        }\n      )\n      .catch(error => {\n        console.error(error);\n      });\n  }\n  async getLocation() {\n    fetch(\"http://127.0.0.1:5000/latlong\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        this.setState({\n          lat: parseFloat(responseData[0][\"LONGITUDE\"]),\n          long: parseFloat(responseData[0][\"LATTITUDE\"])\n        });\n        //console.log(this.state.long, this.state.lat)\n        this.forceUpdate();\n        //console.log(parseFloat(responseData[0][\"LATTITUDE\"]));\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col lg=\"4\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h2\">\n                    <i className=\"tim-icons icon-bell-55 text-info\" /> PwC Demo\n                    Device\n                  </CardTitle>\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n            <Col lg=\"4\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h2\">\n                    <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                    {/*Number of Alerts: {this.state.numberOfAlerts}*/}\n                    Number of Alerts: {this.state.numberOfAlerts}\n                  </CardTitle>\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n            <Col lg=\"4\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  {this.state.deviceStatus === \"CONNECTED\" ? (\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-send text-success\" />\n                      Signal Strength : {this.state.signalStrength}\n                    </CardTitle>\n                  ) : (\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-send text-success\" />\n                      Device Status: {this.state.connectionStatus}\n                    </CardTitle>\n                  )}\n                </CardHeader>\n                 &nbsp; Last Connected at : {this.state.deviceStatus}\n                <CardBody />\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      {/* <h5 className=\"card-category\">Device Telemetry</h5> */}\n                      <CardTitle tag=\"h2\">Telemetry</CardTitle>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\"\n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() => this.setBgChartData(\"data1\")}\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Temperature\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data2\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Water Level\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data3\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Flow\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"3\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data4\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data4\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Heartbeat\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                      data={chartExample1[this.state.bigChartData]}\n                      options={chartExample1.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Alerts</CardTitle>\n                </CardHeader>\n                <CardBody class=\"test2\">\n                  <Table>\n                    <thead className=\"text-primary tablehead\">\n                      <tr>\n                        <th className=\"time\">Time</th>\n                        <th className=\"value\">Value</th>\n                        <th className=\"error\">Error Code</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"tablebody\">\n                      {this.state.alerts.map(item =>\n                        //  console.log(item[\"DATE\"] + item[\"TIME\"])\n                        <tr>\n                          <td class=\"time\">{item[\"DATE\"] + \" \" + item[\"TIME\"]}</td>\n                          <td class=\"value\">Temperature Sensor Not Working</td>\n                          <td className=\"error\" >{item[\"ERROR CODE\"]}</td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Maps</CardTitle>\n                </CardHeader>\n                <CardBody className=\"mapContainer\">\n                  <div\n                      id=\"map\"\n                      className=\"map\"\n                      style={{ position: \"relative\", overflow: \"hidden\", height: \"380px\" , width: \"100%\" }}\n                    >\n                    <Map google={this.props.google} zoom={13} center={{lat: this.state.lat , lng: this.state.long}}>\n                      <Marker position={{ lat: this.state.lat, lng: this.state.long}} />\n                    </Map>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190\"\n})(Dashboard)\n"]},"metadata":{},"sourceType":"module"}