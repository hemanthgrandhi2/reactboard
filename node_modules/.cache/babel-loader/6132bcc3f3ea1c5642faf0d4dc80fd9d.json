{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\hemanthg607\\\\Documents\\\\Projects\\\\IoTDashboard\\\\iotdashboard-master\\\\src\\\\views\\\\Dashboard.jsx\";\nimport React from \"react\";\nimport \"./Dashboard.css\"; //import Map from \"../components/Map\";\n// nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // react plugin used to create charts\n\nimport { Line } from \"react-chartjs-2\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react'; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Table, Row, Col } from \"reactstrap\"; // core components\n// import { chartExample1 } from \"../variables/charts.jsx\";\n// import LineGraph from \"../variables/linegraph\";\n\nvar datemax = new Date(\"April 1, 2019 21:13:00\");\nvar datemin = new Date(datemax.getDate() - 13);\nvar chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  elements: {\n    line: {\n      tension: 0\n    }\n  },\n  responsive: true,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.0)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        suggestedMin: 0,\n        // suggestedMax: 100,\n        padding: 20,\n        fontColor: \"#9a9a9a\"\n      }\n    }],\n    xAxes: [{\n      type: 'time',\n      // distribution: 'linear',\n      time: {\n        unit: 'day',\n        displayFormats: {\n          day: 'MMM DD'\n        } // max: datemax,\n        // min: datemin,\n\n      },\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.1)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        fontColor: \"#9a9a9a\" // source: 'data',\n\n      }\n    }]\n  }\n};\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.setBgChartData = function (name) {\n      _this.setState({\n        bigChartData: name\n      });\n    };\n\n    _this.getAlerts = _this.getAlerts.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDeviceStatus = _this.getDeviceStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTemperature = _this.getTemperature.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSignal = _this.getSignal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLocation = _this.getLocation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getWaterLevel = _this.getWaterLevel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      bigChartData: \"data1\",\n      testdata: null,\n      numberOfAlerts: null,\n      alerts: [],\n      signalStrength: null,\n      deviceStatus: null,\n      lat: 0,\n      long: 0,\n      temperature: [],\n      waterlevel: [],\n      chartExample1: {\n        data1: function data1(canvas) {\n          var ctx = canvas.getContext(\"2d\");\n          var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n          gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n          gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n          gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n          var dateObj = new Date();\n          return {\n            labels: [new Date(), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1)],\n            datasets: [{\n              label: \"Temperature\",\n              fill: true,\n              backgroundColor: gradientStroke,\n              borderColor: \"#1f8ef1\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: \"#1f8ef1\",\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: \"#1f8ef1\",\n              pointBorderWidth: 0,\n              pointHoverRadius: 0,\n              pointHoverBorderWidth: 0,\n              pointRadius: 0,\n              data: _this.state.temperature\n            }]\n          };\n        },\n        data2: function data2(canvas) {\n          var ctx = canvas.getContext(\"2d\");\n          var gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n          gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n          gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n          gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n          // let td = moment('2019-04-01')\n\n          var date = [];\n          date[0] = new Date();\n          date[1] = new Date(date[0].getDate() - 1);\n          date[2] = new Date(date[0].getDate() - 2);\n          date[3] = new Date(date[0].getDate() - 3);\n          date[4] = new Date(date[0].getDate() - 4);\n          date[5] = new Date(date[0].getDate() - 5);\n          date[6] = new Date(date[0].getDate() - 6);\n          date[7] = new Date(date[0].getDate() - 7);\n          date[8] = new Date(date[0].getDate() - 8);\n          date[9] = new Date(date[0].getDate() - 9);\n          var dateObj = new Date();\n          return {\n            labels: [new Date(), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1), dateObj.setDate(dateObj.getDate() - 1)],\n            datasets: [{\n              label: \"Water Level\",\n              fill: true,\n              backgroundColor: gradientStroke,\n              borderColor: \"#1f8ef1\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: \"#1f8ef1\",\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: \"#1f8ef1\",\n              pointBorderWidth: 0,\n              pointHoverRadius: 0,\n              pointHoverBorderWidth: 0,\n              pointRadius: 0,\n              data: _this.state.waterlevel\n            }]\n          };\n        },\n        options: chart1_2_options\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    // ,{'mode': 'no-cors'}\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.getTemperature();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getWaterLevel();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getAlerts();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getSignal();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getDeviceStatus();\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this2.getLocation();\n      }, 5000);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        lat: nextProps.lat,\n        long: nextProps.long\n      });\n    }\n  }, {\n    key: \"getWaterLevel\",\n    value: function () {\n      var _getWaterLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/waterlevel\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var a = [];\n                  var i = 0; // newdate = date.split(\"/\").reverse().join(\"-\");\n\n                  for (var index = 0; index < responseData.length - 1; index++) {\n                    var x = responseData[index][\"DATE\"];\n                    var newdate = x.split(\"/\").reverse().join(\"-\");\n                    var t1 = newdate + \" \" + responseData[index][\"TIME\"];\n                    var y = responseData[index + 1][\"DATE\"];\n                    var newdate1 = y.split(\"/\").reverse().join(\"-\");\n                    var t2 = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                    var td = new Date(t2) - new Date(t1); // let td2 = new Date(\"April 1, 2019 21:13:00\") - new Date(t1)\n\n                    var td2 = new Date() - new Date(t1);\n\n                    if (td > 380000 && td2 < 1209600000) {\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = responseData[index][\"WATER LEVEL\"] === \"HIGH\" ? 1 : 0;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = 0;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = 0;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = responseData[index + 1][\"WATER LEVEL\"] === \"HIGH\" ? 1 : 0;\n                      i = i + 1;\n                    } else if (td2 < 1209600000) {\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = responseData[index][\"WATER LEVEL\"] === \"HIGH\" ? 1 : 0;\n                      ;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = responseData[index + 1][\"WATER LEVEL\"] === \"HIGH\" ? 1 : 0;\n                      i = i + 1;\n                    }\n                  }\n\n                  _this3.setState({\n                    waterlevel: a\n                  }); //console.log(this.state.temperature);\n\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getWaterLevel() {\n        return _getWaterLevel.apply(this, arguments);\n      }\n\n      return getWaterLevel;\n    }()\n  }, {\n    key: \"getTemperature\",\n    value: function () {\n      var _getTemperature = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/temperature\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var a = [];\n                  var i = 0; // newdate = date.split(\"/\").reverse().join(\"-\");\n\n                  for (var index = 0; index < responseData.length - 1; index++) {\n                    var x = responseData[index][\"DATE\"];\n                    var newdate = x.split(\"/\").reverse().join(\"-\");\n                    var t1 = newdate + \" \" + responseData[index][\"TIME\"];\n                    var y = responseData[index + 1][\"DATE\"];\n                    var newdate1 = y.split(\"/\").reverse().join(\"-\");\n                    var t2 = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                    var td = new Date(t2) - new Date(t1); // let td2 = new Date(\"April 1, 2019 21:13:00\") - new Date(t1)\n\n                    var td2 = new Date() - new Date(t1);\n\n                    if (td > 380000 && td2 < 1209600000) {\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = 0;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = 0;\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n                      i = i + 1;\n                    } else if (td2 < 1209600000) {\n                      a[i] = {};\n                      a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n                      a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n                      i = i + 1;\n                      a[i] = {};\n                      a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n                      a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n                      i = i + 1;\n                    }\n                  }\n\n                  _this4.setState({\n                    temperature: a\n                  }); //console.log(this.state.temperature);\n\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getTemperature() {\n        return _getTemperature.apply(this, arguments);\n      }\n\n      return getTemperature;\n    }()\n  }, {\n    key: \"getAlerts\",\n    value: function () {\n      var _getAlerts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/error\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var numberOfAlerts = responseData.length;\n\n                  _this5.setState({\n                    numberOfAlerts: numberOfAlerts,\n                    alerts: responseData\n                  });\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getAlerts() {\n        return _getAlerts.apply(this, arguments);\n      }\n\n      return getAlerts;\n    }()\n  }, {\n    key: \"getSignal\",\n    value: function () {\n      var _getSignal = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/sigstrength\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  _this6.setState({\n                    signalStrength: responseData[0][\"SIGNAL STRENGTH\"]\n                  });\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getSignal() {\n        return _getSignal.apply(this, arguments);\n      }\n\n      return getSignal;\n    }()\n  }, {\n    key: \"getDeviceStatus\",\n    value: function () {\n      var _getDeviceStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this7 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/checkdev\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  var deviceDate = responseData[0][\"DATE\"];\n                  deviceDate = deviceDate.split(\"/\").reverse().join(\"-\");\n                  deviceDate = deviceDate + \" \" + responseData[0][\"TIME\"];\n                  var today = new Date();\n                  var currentDate = today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear();\n                  var currentTime = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n                  var timeDiff = today - new Date(deviceDate); //console.log(timeDiff)\n                  //console.log(currentDateTime - deviceDate)\n\n                  if (timeDiff > 380000) {\n                    _this7.setState({\n                      deviceStatus: \"Device Disconnected -- Last Connected at:\" + \" \" + responseData[0][\"DATE\"] + \" \" + responseData[0][\"TIME\"]\n                    });\n                  } else {\n                    _this7.setState({\n                      deviceStatus: \"Device Connected -- Signal Strength:\" + \" \" + responseData[0][\"SIGNAL STRENGTH\"]\n                    });\n                  }\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getDeviceStatus() {\n        return _getDeviceStatus.apply(this, arguments);\n      }\n\n      return getDeviceStatus;\n    }()\n  }, {\n    key: \"getLocation\",\n    value: function () {\n      var _getLocation = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var _this8 = this;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                fetch(\"http://127.0.0.1:5000/latlong\", {\n                  method: \"GET\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (responseData) {\n                  //set your data here\n                  _this8.setState({\n                    lat: parseFloat(responseData[0][\"LONGITUDE\"]),\n                    long: parseFloat(responseData[0][\"LATTITUDE\"])\n                  }); //console.log(this.state.long, this.state.lat)\n\n\n                  _this8.forceUpdate(); //console.log(parseFloat(responseData[0][\"LATTITUDE\"]));\n\n                }).catch(function (error) {\n                  console.error(error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getLocation() {\n        return _getLocation.apply(this, arguments);\n      }\n\n      return getLocation;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, \"PwC Demo Device\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Number of Alerts: \", this.state.numberOfAlerts)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, this.state.deviceStatus === \"CONNECTED\" ? React.createElement(CardTitle, {\n        tag: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"Signal Strength : \", this.state.signalStrength) : React.createElement(CardTitle, {\n        tag: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, this.state.deviceStatus)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, \"Telemetry\")), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(Button, {\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data1\"\n        }),\n        color: \"info\",\n        id: \"0\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return _this9.setBgChartData(\"data1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        defaultChecked: true,\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"1\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data2\"\n        }),\n        onClick: function onClick() {\n          return _this9.setBgChartData(\"data2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Water Level\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-gift-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"2\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data3\"\n        }),\n        onClick: function onClick() {\n          return _this9.setBgChartData(\"data3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, \"Flow\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-tap-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-area\",\n        style: {\n          marginRight: '100px !important'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.chartExample1[this.state.bigChartData],\n        options: this.state.chartExample1.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, \"Alerts\")), React.createElement(CardBody, {\n        class: \"test2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary tablehead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"th\", {\n        className: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, \"Value\"), React.createElement(\"th\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, \"Error Code\"))), React.createElement(\"tbody\", {\n        className: \"tablebody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, this.state.alerts.map(function (item) {\n        return (//  console.log(item[\"DATE\"] + item[\"TIME\"])\n          React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 642\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            class: \"time\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 643\n            },\n            __self: this\n          }, item[\"DATE\"] + \" \" + item[\"TIME\"]), React.createElement(\"td\", {\n            class: \"value\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 644\n            },\n            __self: this\n          }, \"Temperature Sensor Not Working\"), React.createElement(\"td\", {\n            className: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 645\n            },\n            __self: this\n          }, item[\"ERROR CODE\"]))\n        );\n      })))))), React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, \"Maps\")), React.createElement(CardBody, {\n        className: \"mapContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        className: \"map\",\n        style: {\n          position: \"relative\",\n          overflow: \"hidden\",\n          height: \"380px\",\n          width: \"600px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        zoom: 13,\n        center: {\n          lat: this.state.lat,\n          lng: this.state.long\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: this.state.lat,\n          lng: this.state.long\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190\"\n})(Dashboard);","map":{"version":3,"sources":["C:\\Users\\hemanthg607\\Documents\\Projects\\IoTDashboard\\iotdashboard-master\\src\\views\\Dashboard.jsx"],"names":["React","classNames","Line","Map","InfoWindow","Marker","GoogleApiWrapper","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","datemax","Date","datemin","getDate","chart1_2_options","maintainAspectRatio","legend","display","elements","line","tension","responsive","scales","yAxes","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","padding","fontColor","xAxes","type","time","unit","displayFormats","day","barPercentage","Dashboard","props","setBgChartData","name","setState","bigChartData","getAlerts","bind","getDeviceStatus","getTemperature","getSignal","getLocation","getWaterLevel","state","testdata","numberOfAlerts","alerts","signalStrength","deviceStatus","lat","long","temperature","waterlevel","chartExample1","data1","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","dateObj","labels","setDate","datasets","label","fill","backgroundColor","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","date","options","interval","setInterval","nextProps","fetch","method","then","response","json","responseData","a","i","index","length","x","newdate","split","reverse","join","t1","y","newdate1","t2","td","td2","catch","error","console","deviceDate","today","currentDate","getMonth","getFullYear","currentTime","getHours","getMinutes","getSeconds","timeDiff","parseFloat","forceUpdate","active","marginRight","map","item","position","overflow","height","width","google","lng","Component","apiKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Dashboard.css\";\n//import Map from \"../components/Map\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line } from \"react-chartjs-2\";\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\n// import { chartExample1 } from \"../variables/charts.jsx\";\n// import LineGraph from \"../variables/linegraph\";\n\nlet datemax  = new Date(\"April 1, 2019 21:13:00\");\nlet datemin = new Date(datemax.getDate() - 13);\n\n\n\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n\n  \n  elements: {\n    line: {\n    tension: 0\n    }\n    },\n\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 0,\n          // suggestedMax: 100,\n          padding: 20,\n\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ],\n    xAxes: [\n      {\n        type: 'time',\n        // distribution: 'linear',\n\n        time: {\n            unit : 'day',\n            displayFormats: {\n                day: 'MMM DD',\n            },\n            // max: datemax,\n            // min: datemin,\n        },\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          fontColor: \"#9a9a9a\",\n          // source: 'data',\n        }\n      }\n    ]\n  }\n};\n\n\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.getAlerts = this.getAlerts.bind(this);\n    this.getDeviceStatus = this.getDeviceStatus.bind(this);\n    this.getTemperature = this.getTemperature.bind(this);\n    this.getSignal = this.getSignal.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.getWaterLevel = this.getWaterLevel.bind(this);\n\n    this.state = {\n      bigChartData: \"data1\",\n      testdata: null,\n      numberOfAlerts: null,\n      alerts: [],\n      signalStrength: null,\n      deviceStatus: null,\n      lat: 0,\n      long: 0,\n      temperature: [],\n      waterlevel: [],\n      chartExample1 : {\n        data1: canvas => {\n          let ctx = canvas.getContext(\"2d\");\n      \n          let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n      \n          gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n          gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n          gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n           let dateObj = new Date();\n\n      \n          return {\n\n            labels : [ new Date(),\n              \n                      dateObj.setDate(dateObj.getDate() - 1) ,\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                    ],\n\n            datasets: [\n              {\n                label: \"Temperature\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#1f8ef1\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#1f8ef1\",\n                pointBorderColor: \"rgba(255,255,255,0)\",\n                pointHoverBackgroundColor: \"#1f8ef1\",\n                pointBorderWidth: 0,\n                pointHoverRadius: 0,\n                pointHoverBorderWidth: 0,\n                pointRadius: 0,\n                data: this.state.temperature\n              }\n            ]\n          };\n        },\n\n        data2: canvas => {\n          let ctx = canvas.getContext(\"2d\");\n      \n          let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n      \n          gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n          gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n          gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n          // let td = moment('2019-04-01')\n          let date = []\n          date[0]  = new Date();\n           date[1] = new Date(date[0].getDate() - 1);\n          date[2] = new Date(date[0].getDate() - 2);\n\n           date[3] = new Date(date[0].getDate() - 3);\n           date[4] = new Date(date[0].getDate() - 4);\n           date[5] = new Date(date[0].getDate() - 5);\n           date[6] = new Date(date[0].getDate() - 6);\n           date[7] = new Date(date[0].getDate() - 7);\n           date[8] = new Date(date[0].getDate() - 8);\n           date[9] = new Date(date[0].getDate() - 9);\n           let dateObj = new Date();\n\n      \n          return {\n\n            labels : [ new Date(),\n              \n                      dateObj.setDate(dateObj.getDate() - 1) ,\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                      dateObj.setDate(dateObj.getDate() - 1),\n                    ],\n\n            datasets: [\n              {\n                label: \"Water Level\",\n                fill: true,\n                backgroundColor: gradientStroke,\n                borderColor: \"#1f8ef1\",\n                borderWidth: 2,\n                borderDash: [],\n                borderDashOffset: 0.0,\n                pointBackgroundColor: \"#1f8ef1\",\n                pointBorderColor: \"rgba(255,255,255,0)\",\n                pointHoverBackgroundColor: \"#1f8ef1\",\n                pointBorderWidth: 0,\n                pointHoverRadius: 0,\n                pointHoverBorderWidth: 0,\n                pointRadius: 0,\n                data: this.state.waterlevel,\n              }\n            ]\n          };\n        },\n        \n        options: chart1_2_options\n      },\n    };\n  }\n\n  \n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n  // ,{'mode': 'no-cors'}\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.getTemperature(), 1000);\n    this.interval = setInterval(() => this.getWaterLevel(), 1000);\n\n    this.interval = setInterval(() => this.getAlerts(), 1000);\n    this.interval = setInterval(() => this.getSignal(), 1000);\n    this.interval = setInterval(() => this.getDeviceStatus(), 1000);\n    this.interval = setInterval(() => this.getLocation(), 5000);\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      lat: nextProps.lat,\n      long: nextProps.long\n    });\n  }\n  async getWaterLevel() {\n    fetch(\"http://127.0.0.1:5000/waterlevel\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n\n\n        let a = [];\n        let i = 0;\n        // newdate = date.split(\"/\").reverse().join(\"-\");\n        for (let index = 0; index < responseData.length - 1; index++) {\n          let x = responseData[index][\"DATE\"];\n          let newdate = x\n            .split(\"/\")\n            .reverse()\n            .join(\"-\");\n          let t1 = newdate + \" \" + responseData[index][\"TIME\"];\n          let y = responseData[index + 1][\"DATE\"];\n          let newdate1 = y\n            .split(\"/\")\n            .reverse()\n            .join(\"-\");\n          let t2 = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n          let td = new Date(t2) - new Date(t1);\n          // let td2 = new Date(\"April 1, 2019 21:13:00\") - new Date(t1)\n          let td2 = new Date() - new Date(t1)\n\n          if (td > 380000 && td2<1209600000) {\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = (responseData[index][\"WATER LEVEL\"]===\"HIGH\"?1 : 0);\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = 0;\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = 0;\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = (responseData[index + 1][\"WATER LEVEL\"]===\"HIGH\"?1 : 0);\n              i = i + 1;\n        \n          } else if(td2<1209600000)  {\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = (responseData[index][\"WATER LEVEL\"]===\"HIGH\"?1 : 0);;\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = (responseData[index + 1][\"WATER LEVEL\"]===\"HIGH\"?1 : 0);\n              i = i + 1;\n        \n          }\n        }\n\n\n\n        this.setState({\n          waterlevel: a\n        });\n        //console.log(this.state.temperature);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getTemperature() {\n    fetch(\"http://127.0.0.1:5000/temperature\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n\n\n        let a = [];\n        let i = 0;\n        // newdate = date.split(\"/\").reverse().join(\"-\");\n        for (let index = 0; index < responseData.length - 1; index++) {\n          let x = responseData[index][\"DATE\"];\n          let newdate = x\n            .split(\"/\")\n            .reverse()\n            .join(\"-\");\n          let t1 = newdate + \" \" + responseData[index][\"TIME\"];\n          let y = responseData[index + 1][\"DATE\"];\n          let newdate1 = y\n            .split(\"/\")\n            .reverse()\n            .join(\"-\");\n          let t2 = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n          let td = new Date(t2) - new Date(t1);\n          // let td2 = new Date(\"April 1, 2019 21:13:00\") - new Date(t1)\n          let td2 = new Date() - new Date(t1)\n\n          if (td > 380000 && td2<1209600000) {\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = 0;\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = 0;\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n              i = i + 1;\n        \n          } else if(td2<1209600000)  {\n            a[i] = {};\n            a[i][\"x\"] = newdate + \" \" + responseData[index][\"TIME\"];\n            a[i][\"y\"] = responseData[index][\"TEMPERATURE\"];\n            i = i + 1;\n            a[i] = {};\n            a[i][\"x\"] = newdate1 + \" \" + responseData[index + 1][\"TIME\"];\n            a[i][\"y\"] = responseData[index + 1][\"TEMPERATURE\"];\n              i = i + 1;\n        \n          }\n        }\n\n\n\n        this.setState({\n          temperature: a\n        });\n        //console.log(this.state.temperature);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getAlerts() {\n    fetch(\"http://127.0.0.1:5000/error\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        let numberOfAlerts = responseData.length;\n        this.setState({\n          numberOfAlerts: numberOfAlerts,\n          alerts: responseData\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getSignal() {\n    fetch(\"http://127.0.0.1:5000/sigstrength\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        this.setState({\n          signalStrength: responseData[0][\"SIGNAL STRENGTH\"]\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  async getDeviceStatus() {\n    fetch(\"http://127.0.0.1:5000/checkdev\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        let deviceDate = responseData[0][\"DATE\"];\n        deviceDate = deviceDate\n          .split(\"/\")\n          .reverse()\n          .join(\"-\");\n        deviceDate = deviceDate+ \" \" + responseData[0][\"TIME\"];\n        let today = new Date();\n        let currentDate = today.getDate() + '/'+ (today.getMonth()+1) +'/'+ today.getFullYear();\n        let currentTime = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        let timeDiff = today - new Date(deviceDate)\n        //console.log(timeDiff)\n        //console.log(currentDateTime - deviceDate)\n        if (timeDiff > 380000){\n          this.setState({\n            deviceStatus:\"Device Disconnected -- Last Connected at:\" + \" \" + responseData[0][\"DATE\"] + \" \" + responseData[0][\"TIME\"]\n          });\n        }\n        else{\n          this.setState({\n            deviceStatus:\"Device Connected -- Signal Strength:\" + \" \" + responseData[0][\"SIGNAL STRENGTH\"] \n          });\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n  async getLocation() {\n    fetch(\"http://127.0.0.1:5000/latlong\", { method: \"GET\" })\n      .then(response => response.json())\n      .then(responseData => {\n        //set your data here\n        this.setState({\n          lat: parseFloat(responseData[0][\"LONGITUDE\"]),\n          long: parseFloat(responseData[0][\"LATTITUDE\"])\n        });\n        //console.log(this.state.long, this.state.lat)\n        this.forceUpdate();\n        //console.log(parseFloat(responseData[0][\"LATTITUDE\"]));\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col lg=\"3\">\n              <Card className=\"card-chart1\">\n                <CardHeader>\n                  <CardTitle tag=\"h3\">\n                    {/* <i className=\"tim-icons icon-bell-55 text-info\" /> */}\n                     PwC Demo\n                    Device\n                  </CardTitle>\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n            <Col lg=\"3\">\n              <Card className=\"card-chart1\">\n                <CardHeader>\n                  <CardTitle tag=\"h3\">\n                    {/* <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"} */}\n                    {/*Number of Alerts: {this.state.numberOfAlerts}*/}\n                    Number of Alerts: {this.state.numberOfAlerts}\n                  </CardTitle>\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n            <Col lg=\"6\">\n              <Card className=\"card-chart1\">\n                <CardHeader>\n                  {this.state.deviceStatus === \"CONNECTED\" ? (\n                    <CardTitle tag=\"h3\">\n                      {/* <i className=\"tim-icons icon-send text-success\" /> */}\n                      Signal Strength : {this.state.signalStrength}\n                    </CardTitle>\n                  ) : (\n                    <CardTitle tag=\"h3\">\n                      {/* <i className=\"tim-icons icon-send text-success\" /> */}\n                        {this.state.deviceStatus}\n                    </CardTitle>\n                  )}\n                </CardHeader>\n                <CardBody />\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      {/* <h5 className=\"card-category\">Device Telemetry</h5> */}\n                      <CardTitle tag=\"h2\">Telemetry</CardTitle>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\"\n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() => this.setBgChartData(\"data1\")}\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Temperature\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data2\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Water Level\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data3\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Flow\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\" style={{marginRight : '100px !important'}}>\n                    <Line\n                      data={this.state.chartExample1[this.state.bigChartData]}\n                      options={this.state.chartExample1.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Alerts</CardTitle>\n                </CardHeader>\n                <CardBody class=\"test2\">\n                  <Table>\n                    <thead className=\"text-primary tablehead\">\n                      <tr>\n                        <th className=\"time\">Time</th>\n                        <th className=\"value\">Value</th>\n                        <th className=\"error\">Error Code</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"tablebody\">\n                      {this.state.alerts.map(item =>\n                        //  console.log(item[\"DATE\"] + item[\"TIME\"])\n                        <tr>\n                          <td class=\"time\">{item[\"DATE\"] + \" \" + item[\"TIME\"]}</td>\n                          <td class=\"value\">Temperature Sensor Not Working</td>\n                          <td className=\"error\" >{item[\"ERROR CODE\"]}</td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Maps</CardTitle>\n                </CardHeader>\n                <CardBody className=\"mapContainer\">\n                  <div\n                      id=\"map\"\n                      className=\"map\"\n                      style={{ position: \"relative\", overflow: \"hidden\", height: \"380px\" , width: \"600px\" }}\n                    >\n                    <Map google={this.props.google} zoom={13} center={{lat: this.state.lat , lng: this.state.long}}>\n                      <Marker position={{ lat: this.state.lat, lng: this.state.long}} />\n                    </Map>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190\"\n})(Dashboard)\n"]},"metadata":{},"sourceType":"module"}